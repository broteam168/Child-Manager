<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>